// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from idl.djinni

#ifndef DJINNI_GENERATED_NJSALGORANDTRANSACTION_HPP
#define DJINNI_GENERATED_NJSALGORANDTRANSACTION_HPP


#include "../include/AlgorandAssetConfigurationInfo.hpp"
#include "../include/AlgorandAssetFreezeInfo.hpp"
#include "../include/AlgorandAssetParams.hpp"
#include "../include/AlgorandAssetTransferInfo.hpp"
#include "../include/AlgorandParticipationInfo.hpp"
#include "../include/AlgorandPaymentInfo.hpp"
#include <cstdint>
#include <memory>
#include <string>
#include <vector>

#include <nan.h>
#include <node.h>
#include "../include/AlgorandTransaction.hpp"

using namespace v8;
using namespace node;
using namespace std;
using namespace ledger::core::api;

class NJSAlgorandTransaction final {
public:

    static void Initialize(Local<Object> target);
    NJSAlgorandTransaction() = delete;

    static Local<Object> wrap(const std::shared_ptr<ledger::core::api::AlgorandTransaction> &object);
    static Nan::Persistent<ObjectTemplate> AlgorandTransaction_prototype;

private:
    static NAN_METHOD(getId);

    static NAN_METHOD(getType);

    static NAN_METHOD(getSender);

    static NAN_METHOD(getFee);

    static NAN_METHOD(getNote);

    static NAN_METHOD(getRound);

    static NAN_METHOD(getSenderRewards);

    static NAN_METHOD(getReceiverRewards);

    static NAN_METHOD(getCloseRewards);

    static NAN_METHOD(getCorrelationId);

    /**
     * Set the correlation id which can be used to debug transaction errors
     * through the full ledger stack
     * @return the OLD Correlation ID, if it was set (empty string if it was unset)
     */
    static NAN_METHOD(setCorrelationId);

    static NAN_METHOD(setSender);

    static NAN_METHOD(setFee);

    static NAN_METHOD(setNote);

    static NAN_METHOD(setPaymentInfo);

    static NAN_METHOD(getPaymentInfo);

    static NAN_METHOD(setParticipationInfo);

    static NAN_METHOD(getParticipationInfo);

    static NAN_METHOD(setAssetConfigurationInfo);

    static NAN_METHOD(getAssetConfigurationInfo);

    static NAN_METHOD(setAssetTransferInfo);

    static NAN_METHOD(getAssetTransferInfo);

    static NAN_METHOD(setAssetFreezeInfo);

    static NAN_METHOD(getAssetFreezeInfo);

    /** Serialize the transaction in MsgPack format */
    static NAN_METHOD(serialize);

    static NAN_METHOD(setSignature);

    static NAN_METHOD(New);

    static NAN_METHOD(isNull);
};
#endif //DJINNI_GENERATED_NJSALGORANDTRANSACTION_HPP
